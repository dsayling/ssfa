# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  heroku: circleci/heroku@1.0.1 # Use the Heroku orb in your config
  browser-tools: circleci/browser-tools@dev:cache-testing

workflows:
  heroku_deploy:
    jobs:
      - build
      - heroku/deploy-via-git:
          requires:
            - build # only run deploy-via-git job if the build job has completed
          filters:
            branches:
              only: master

jobs:
  build:
    docker:
      - image: dayling/test-repo:test
      # - image: dayling/test-repo:baseline  # has the browsers pre-installed

    steps:
      - browser-tools/restore-browser-tools
      # - browser-tools/install-browser-tools
      # - browser-tools/cache-browser-tools
      - checkout
      - run: mkdir test-reports
      # - run:
      #     name: Download Selenium
      #     command: |
      #       curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start pre-installed Selenium
          command: |
            java -jar /usr/local/bin/selenium.jar -log test-reports/selenium.log
          background: true
      - restore_cache:
          key: deps1v1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - restore_cache:
          key: deps2v1-{{ .Branch }}-{{ checksum "tests/requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r tests/requirements.txt
            pip install -e .
      - save_cache:
          key: deps1v1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - save_cache:
          key: deps2v1-{{ .Branch }}-{{ checksum "tests/requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Start Flask app in background
          command: |
            . venv/bin/activate
            cd app
            python app.py
          background: true
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            cd tests
            python -m unittest
